{"ast":null,"code":"var _jsxFileName = \"/Users/romanmac/WebstormProjects/paint/client/src/components/Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport \"../styles/canvas.scss\";\nimport { observer } from \"mobx-react-lite\";\nimport canvasState from \"../store/canvasState\";\nimport toolState from \"../store/toolState\";\nimport Brush from \"../tools/Brush\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport Rect from \"../tools/Rect\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = _s(observer(_c = _s(() => {\n  _s();\n  const canvasRef = useRef(); // посилання на канвас\n  const usernameRef = useRef(); // посилання на поле введення, за допомогою хука юзреф\n  const [modal, setModal] = useState(true); // створюємо стан, для видимості модального вікна\n  const params = useParams();\n  const [isCreated, setIsCreated] = useState(false); // Додаємо стан для контролю\n\n  // При першому запуску програми\n  useEffect(() => {\n    const ctx = canvasRef.current.getContext(\"2d\");\n    canvasState.setCanvas(canvasRef.current);\n\n    // Виконуємо GET-запит для перевірки, чи є зображення на сервері\n    axios.get(`http://localhost:8000/image?id=${params.id}`).then(res => {\n      if (res.data) {\n        setIsCreated(true); // Якщо зображення знайдено, встановлюємо стан\n        const img = new Image();\n        img.src = res.data;\n        img.onload = () => {\n          ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n          ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        };\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }); // Додаємо залежність, щоб спрацьовувало при зміні id\n\n  useEffect(() => {\n    // Якщо зображення не створене, зберігаємо його на бекенді\n    if (!isCreated) {\n      saveImageToBackend();\n    }\n  }, [isCreated]); // Спрацьовує лише якщо isCreated = false\n\n  // якщо масив залежностей пустий, то ця функція відпрацює лише один раз\n  // тому при запуску програми ми будемо зберігати посилання на канвас\n\n  // Після того, як юзер ввів нікнейм, нам потрібно створити підключення по вебсокет протоколу\n  useEffect(() => {\n    if (canvasState.username) {\n      const socket = new WebSocket('ws://localhost:8000');\n      canvasState.setSocket(socket);\n      canvasState.setSessionId(params.id);\n      toolState.setTool(new Brush(canvasRef.current, socket, params.id)); // як інструмент присваюємо пензлик\n      socket.onopen = () => {\n        socket.send(JSON.stringify({\n          id: params.id,\n          username: canvasState.username,\n          method: 'connection'\n        }));\n      };\n      socket.onmessage = event => {\n        const msg = JSON.parse(event.data);\n        switch (msg.method) {\n          case \"connection\":\n            console.log(`User ${msg.username} connection`);\n            break;\n          case \"draw\":\n            drawHandler(msg);\n            break;\n        }\n      };\n    }\n  }, [canvasState.username]);\n  const saveImageToBackend = () => {\n    const dataUrl = canvasRef.current.toDataURL('image/png');\n    const imgBase64 = dataUrl.replace('data:image/png;base64,', '');\n    axios.post('http://localhost:8000/image', {\n      img: imgBase64\n    }, {\n      params: {\n        id: params.id\n      }\n    }).then(res => {\n      console.log(res.data.message); // Показуємо повідомлення про успіх\n      setIsCreated(true); // Після успішного збереження оновлюємо стан\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n  const drawHandler = msg => {\n    const figure = msg.figure;\n    const ctx = canvasRef.current.getContext(\"2d\");\n    switch (figure.type) {\n      case \"brush\":\n        Brush.draw(ctx, figure.x, figure.y, figure.color, figure.stroke, figure.lineWidth);\n        break;\n      case \"rect\":\n        Rect.staticDraw(ctx, figure.x, figure.y, figure.width, figure.height, figure.color, figure.stroke, figure.lineWidth);\n        break;\n      case \"finish\":\n        ctx.beginPath();\n        break;\n    }\n  };\n\n  // після того як користувач почав малювати якусь фігуру і закінчив, нам стан канвасу потрібно відправляти на сервер\n  const mouseDownHandler = () => {\n    canvasState.pushToUndo(canvasRef.current.toDataURL());\n    axios.post(`http://localhost:8000/image?id=${params.id}`, {\n      img: canvasRef.current.toDataURL()\n    }).then(res => {\n      console.log(res.data);\n    });\n  };\n\n  // Функція яка в стан встановлює юзернейм та закриває модальне вікно, ми її викликаємо при нажиманні на кнопку у модальному вікні\n  const connectionHandler = () => {\n    canvasState.setUsername(usernameRef.current.value);\n    setModal(false);\n  };\n  return (\n    /*#__PURE__*/\n    // Взяли модальне вікно в bootstrap для введення нікнейму\n    _jsxDEV(\"div\", {\n      className: \"canvas\",\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: modal,\n        onHide: () => {},\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Enter your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: usernameRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => connectionHandler(),\n            children: \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        onMouseDown: () => mouseDownHandler(),\n        ref: canvasRef,\n        width: 600,\n        height: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)\n  );\n}, \"lIYvRCSfpNgVSEVP6lJxtXa8fUU=\", false, function () {\n  return [useParams];\n})), \"lIYvRCSfpNgVSEVP6lJxtXa8fUU=\", false, function () {\n  return [useParams];\n});\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$observer\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","observer","canvasState","toolState","Brush","Button","Modal","useParams","Rect","axios","jsxDEV","_jsxDEV","Canvas","_s","_c","canvasRef","usernameRef","modal","setModal","params","isCreated","setIsCreated","ctx","current","getContext","setCanvas","get","id","then","res","data","img","Image","src","onload","clearRect","width","height","drawImage","catch","err","console","log","saveImageToBackend","username","socket","WebSocket","setSocket","setSessionId","setTool","onopen","send","JSON","stringify","method","onmessage","event","msg","parse","drawHandler","dataUrl","toDataURL","imgBase64","replace","post","message","error","figure","type","draw","x","y","color","stroke","lineWidth","staticDraw","beginPath","mouseDownHandler","pushToUndo","connectionHandler","setUsername","value","className","children","show","onHide","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","ref","Footer","variant","onClick","onMouseDown","_c2","$RefreshReg$"],"sources":["/Users/romanmac/WebstormProjects/paint/client/src/components/Canvas.jsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport \"../styles/canvas.scss\";\nimport {observer} from \"mobx-react-lite\";\nimport canvasState from \"../store/canvasState\";\nimport toolState from \"../store/toolState\";\nimport Brush from \"../tools/Brush\";\nimport {Button, Modal} from \"react-bootstrap\";\nimport {useParams} from \"react-router-dom\";\nimport Rect from \"../tools/Rect\";\nimport axios from \"axios\";\n\nconst Canvas = observer(() => {\n        const canvasRef = useRef(); // посилання на канвас\n        const usernameRef = useRef(); // посилання на поле введення, за допомогою хука юзреф\n        const [modal, setModal] = useState(true); // створюємо стан, для видимості модального вікна\n        const params = useParams();\n        const [isCreated, setIsCreated] = useState(false); // Додаємо стан для контролю\n\n        // При першому запуску програми\n        useEffect(() => {\n            const ctx = canvasRef.current.getContext(\"2d\");\n            canvasState.setCanvas(canvasRef.current);\n\n            // Виконуємо GET-запит для перевірки, чи є зображення на сервері\n            axios.get(`http://localhost:8000/image?id=${params.id}`)\n                .then(res => {\n                    if (res.data) {\n                        setIsCreated(true); // Якщо зображення знайдено, встановлюємо стан\n                        const img = new Image();\n                        img.src = res.data;\n                        img.onload = () => {\n                            ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n                            ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n                        }\n                    }\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }, ); // Додаємо залежність, щоб спрацьовувало при зміні id\n\n        useEffect(() => {\n            // Якщо зображення не створене, зберігаємо його на бекенді\n            if (!isCreated) {\n                saveImageToBackend();\n            }\n        }, [isCreated]); // Спрацьовує лише якщо isCreated = false\n\n        // якщо масив залежностей пустий, то ця функція відпрацює лише один раз\n        // тому при запуску програми ми будемо зберігати посилання на канвас\n\n\n        // Після того, як юзер ввів нікнейм, нам потрібно створити підключення по вебсокет протоколу\n        useEffect(() => {\n            if (canvasState.username) {\n                const socket = new WebSocket('ws://localhost:8000');\n                canvasState.setSocket(socket);\n                canvasState.setSessionId(params.id);\n                toolState.setTool(new Brush(canvasRef.current, socket, params.id)); // як інструмент присваюємо пензлик\n                socket.onopen = () => {\n                    socket.send(JSON.stringify({\n                        id: params.id,\n                        username: canvasState.username,\n                        method: 'connection',\n                    }))\n                }\n                socket.onmessage = (event) => {\n                    const msg = JSON.parse(event.data);\n                    switch (msg.method) {\n                        case \"connection\":\n                            console.log(`User ${msg.username} connection`);\n                            break;\n                        case \"draw\":\n                            drawHandler(msg);\n                            break;\n                    }\n                }\n            }\n        }, [canvasState.username]);\n\n\n        const saveImageToBackend = () => {\n            const dataUrl = canvasRef.current.toDataURL('image/png');\n            const imgBase64 = dataUrl.replace('data:image/png;base64,', '');\n\n            axios.post('http://localhost:8000/image', {img: imgBase64}, {params: {id: params.id}})\n                .then(res => {\n                    console.log(res.data.message); // Показуємо повідомлення про успіх\n                    setIsCreated(true); // Після успішного збереження оновлюємо стан\n                })\n                .catch(err => {\n                    console.error(err);\n                });\n        };\n\n        const drawHandler = (msg) => {\n            const figure = msg.figure;\n            const ctx = canvasRef.current.getContext(\"2d\");\n            switch (figure.type) {\n                case \"brush\":\n                    Brush.draw(ctx, figure.x, figure.y, figure.color, figure.stroke, figure.lineWidth);\n                    break;\n                case \"rect\":\n                    Rect.staticDraw(ctx, figure.x, figure.y, figure.width, figure.height, figure.color, figure.stroke, figure.lineWidth);\n                    break;\n                case \"finish\":\n                    ctx.beginPath();\n                    break;\n            }\n        }\n\n// після того як користувач почав малювати якусь фігуру і закінчив, нам стан канвасу потрібно відправляти на сервер\n        const mouseDownHandler = () => {\n            canvasState.pushToUndo(canvasRef.current.toDataURL());\n            axios.post(`http://localhost:8000/image?id=${params.id}`, {img: canvasRef.current.toDataURL()})\n                .then(res => {\n                    console.log(res.data)\n                })\n        }\n\n// Функція яка в стан встановлює юзернейм та закриває модальне вікно, ми її викликаємо при нажиманні на кнопку у модальному вікні\n        const connectionHandler = () => {\n            canvasState.setUsername(usernameRef.current.value);\n            setModal(false);\n        }\n\n        return (\n            // Взяли модальне вікно в bootstrap для введення нікнейму\n            <div className=\"canvas\">\n                <Modal show={modal} onHide={() => {\n                }}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Enter your name</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <input type=\"text\" ref={usernameRef}/>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={() => connectionHandler()}>\n                            Join\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                <canvas onMouseDown={() => mouseDownHandler()} ref={canvasRef} width={600} height={400}/>\n            </div>\n        );\n    })\n;\n\nexport default Canvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}