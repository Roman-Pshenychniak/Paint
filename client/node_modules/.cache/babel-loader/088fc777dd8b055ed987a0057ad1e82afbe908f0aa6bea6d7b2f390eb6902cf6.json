{"ast":null,"code":"import Tool from \"./Tool\";\nexport default class Brush extends Tool {\n  constructor(canvas, socket, id) {\n    super(canvas, socket, id);\n    this.listen();\n  }\n  listen() {\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n  }\n  mouseUpHandler(e) {\n    this.mouseDown = false;\n  }\n  mouseDownHandler(e) {\n    this.mouseDown = true;\n    this.ctx.beginPath(); // говорить про те що ми почали малювати нову лінію\n    this.ctx.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop); // переміщуємо курсор, отримуємо координати на канвасі\n    // Вираховує позицію миші по осі X, віднімаючи від неї відстань від краю сторінки до початку канваса.\n    // Аналогічно для осі Y — обчислює вертикальну позицію миші на канвасі.\n  }\n  mouseMoveHandler(e) {\n    if (this.mouseDown) {\n      //this.draw(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\n      // отримуємо координати курсора мишки\n\n      this.socket.send(JSON.stringify({\n        method: 'draw',\n        id: this.id,\n        figure: {\n          type: 'brush',\n          x: e.pageX - e.target.offsetLeft,\n          y: e.pageY - e.target.offsetTop\n        }\n      }));\n    }\n  }\n  static draw(x, y) {\n    ctx.lineTo(x, y);\n    ctx.stroke();\n  }\n}\n\n// цей клас наслідується від тула, тобто розширяє його\n// як стається малювання, користувач нажимає на мишку\n// і поки вона нажата ми можемо водити у всі 4 сторони і лінії будуть малюватись\n// тому зробимо 3 обробника подій, коли зажали мишку, коли відпустили і коли рухають нею","map":{"version":3,"names":["Tool","Brush","constructor","canvas","socket","id","listen","onmouseup","mouseUpHandler","bind","onmousedown","mouseDownHandler","onmousemove","mouseMoveHandler","e","mouseDown","ctx","beginPath","moveTo","pageX","target","offsetLeft","pageY","offsetTop","send","JSON","stringify","method","figure","type","x","y","draw","lineTo","stroke"],"sources":["/Users/romanmac/WebstormProjects/paint/client/src/tools/Brush.js"],"sourcesContent":["import Tool from \"./Tool\";\n\nexport default class Brush extends Tool {\n    constructor(canvas, socket, id) {\n        super(canvas, socket, id);\n        this.listen();\n    }\n\n    listen() {\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n    }\n\n    mouseUpHandler(e) {\n        this.mouseDown = false;\n    }\n\n    mouseDownHandler(e) {\n        this.mouseDown = true;\n        this.ctx.beginPath(); // говорить про те що ми почали малювати нову лінію\n        this.ctx.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop); // переміщуємо курсор, отримуємо координати на канвасі\n        // Вираховує позицію миші по осі X, віднімаючи від неї відстань від краю сторінки до початку канваса.\n        // Аналогічно для осі Y — обчислює вертикальну позицію миші на канвасі.\n    }\n\n    mouseMoveHandler(e) {\n        if (this.mouseDown) {\n            //this.draw(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\n            // отримуємо координати курсора мишки\n\n            this.socket.send(JSON.stringify({\n                method: 'draw',\n                id: this.id,\n                figure: {\n                    type: 'brush',\n                    x: e.pageX - e.target.offsetLeft,\n                    y: e.pageY - e.target.offsetTop\n                }\n            }))\n        }\n    }\n\n    static draw(x, y) {\n        ctx.lineTo(x, y);\n        ctx.stroke();\n    }\n\n}\n\n// цей клас наслідується від тула, тобто розширяє його\n// як стається малювання, користувач нажимає на мишку\n// і поки вона нажата ми можемо водити у всі 4 сторони і лінії будуть малюватись\n// тому зробимо 3 обробника подій, коли зажали мишку, коли відпустили і коли рухають нею"],"mappings":"AAAA,OAAOA,IAAI,MAAM,QAAQ;AAEzB,eAAe,MAAMC,KAAK,SAASD,IAAI,CAAC;EACpCE,WAAWA,CAACC,MAAM,EAAEC,MAAM,EAAEC,EAAE,EAAE;IAC5B,KAAK,CAACF,MAAM,EAAEC,MAAM,EAAEC,EAAE,CAAC;IACzB,IAAI,CAACC,MAAM,CAAC,CAAC;EACjB;EAEAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAACH,MAAM,CAACI,SAAS,GAAG,IAAI,CAACC,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IACtD,IAAI,CAACN,MAAM,CAACO,WAAW,GAAG,IAAI,CAACC,gBAAgB,CAACF,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAI,CAACN,MAAM,CAACS,WAAW,GAAG,IAAI,CAACC,gBAAgB,CAACJ,IAAI,CAAC,IAAI,CAAC;EAC9D;EAEAD,cAAcA,CAACM,CAAC,EAAE;IACd,IAAI,CAACC,SAAS,GAAG,KAAK;EAC1B;EAEAJ,gBAAgBA,CAACG,CAAC,EAAE;IAChB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,GAAG,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,CAACD,GAAG,CAACE,MAAM,CAACJ,CAAC,CAACK,KAAK,GAAGL,CAAC,CAACM,MAAM,CAACC,UAAU,EAAEP,CAAC,CAACQ,KAAK,GAAGR,CAAC,CAACM,MAAM,CAACG,SAAS,CAAC,CAAC,CAAC;IAC9E;IACA;EACJ;EAEAV,gBAAgBA,CAACC,CAAC,EAAE;IAChB,IAAI,IAAI,CAACC,SAAS,EAAE;MAChB;MACA;;MAEA,IAAI,CAACX,MAAM,CAACoB,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QAC5BC,MAAM,EAAE,MAAM;QACdtB,EAAE,EAAE,IAAI,CAACA,EAAE;QACXuB,MAAM,EAAE;UACJC,IAAI,EAAE,OAAO;UACbC,CAAC,EAAEhB,CAAC,CAACK,KAAK,GAAGL,CAAC,CAACM,MAAM,CAACC,UAAU;UAChCU,CAAC,EAAEjB,CAAC,CAACQ,KAAK,GAAGR,CAAC,CAACM,MAAM,CAACG;QAC1B;MACJ,CAAC,CAAC,CAAC;IACP;EACJ;EAEA,OAAOS,IAAIA,CAACF,CAAC,EAAEC,CAAC,EAAE;IACdf,GAAG,CAACiB,MAAM,CAACH,CAAC,EAAEC,CAAC,CAAC;IAChBf,GAAG,CAACkB,MAAM,CAAC,CAAC;EAChB;AAEJ;;AAEA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}