{"ast":null,"code":"import Tool from \"./Tool\";\nexport default class Circle extends Tool {\n  constructor(canvas, socket, id) {\n    super(canvas, socket, id);\n    this.listen();\n  }\n  listen() {\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n  }\n  mouseUpHandler(e) {\n    this.mouseDown = false;\n    this.socket.send(JSON.stringify({\n      method: 'draw',\n      id: this.id,\n      figure: {\n        type: 'circle',\n        x: this.startX,\n        y: this.startY,\n        r: this.radius,\n        color: this.ctx.fillStyle,\n        stroke: this.ctx.strokeStyle,\n        lineWidth: this.ctx.lineWidth\n      }\n    }));\n  }\n  mouseDownHandler(e) {\n    this.mouseDown = true;\n    this.startX = e.pageX - e.target.offsetLeft; // Вираховує позицію миші по осі X, віднімаючи від неї відстань від краю сторінки до початку канваса.\n    this.startY = e.pageY - e.target.offsetTop; // Аналогічно для осі Y — обчислює вертикальну позицію миші на канвасі.\n    this.saved = this.canvas.toDataURL(); // Зберігаємо зображення з канвасу\n  }\n  mouseMoveHandler(e) {\n    if (this.mouseDown) {\n      let currentX = e.pageX - e.target.offsetLeft;\n      this.radius = currentX - this.startX;\n      this.draw(this.startX, this.startY, this.radius);\n    }\n  }\n  draw(x, y, r) {\n    const img = new Image();\n    img.src = this.saved;\n    // Спрацьовує тоді коли зображення встановлено, асинхронна функція\n    img.onload = () => {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height); // Очищаємо канвас від тих фігур які ми намалювали, щоб бачити лише поточний обєкт\n      this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height); // Через те що ми очищаємо весь канвас, нам потрібно повернути старі малюнки,тому ми зберіг img\n      this.ctx.beginPath(); // говорить про те що ми почали малювати нову лінію\n      this.ctx.arc(x, y, r, 0, 2 * Math.PI);\n      this.ctx.fill();\n      this.ctx.stroke();\n    };\n  }\n  static staticDraw(ctx, x, y, r, color, stroke, lineWidth) {\n    ctx.strokeStyle = stroke;\n    ctx.fillStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.arc(x, y, r, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.stroke();\n  }\n}\n\n// у цьому класі ми робимо майже те саме, що і в класі прямокутник, тільки малюємо коло\n// не обчислюємо ширину і висоту, а обчислюємо радіус, як ширину між початковою та поточкою точкою, а коло беремо від 0 до 2Pi","map":{"version":3,"names":["Tool","Circle","constructor","canvas","socket","id","listen","onmouseup","mouseUpHandler","bind","onmousedown","mouseDownHandler","onmousemove","mouseMoveHandler","e","mouseDown","send","JSON","stringify","method","figure","type","x","startX","y","startY","r","radius","color","ctx","fillStyle","stroke","strokeStyle","lineWidth","pageX","target","offsetLeft","pageY","offsetTop","saved","toDataURL","currentX","draw","img","Image","src","onload","clearRect","width","height","drawImage","beginPath","arc","Math","PI","fill","staticDraw"],"sources":["/Users/romanmac/WebstormProjects/paint/client/src/tools/Circle.js"],"sourcesContent":["import Tool from \"./Tool\";\n\nexport default class Circle extends Tool {\n    constructor(canvas, socket, id) {\n        super(canvas, socket, id);\n        this.listen();\n    }\n\n    listen() {\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n    }\n\n    mouseUpHandler(e) {\n        this.mouseDown = false;\n        this.socket.send(JSON.stringify({\n            method: 'draw',\n            id: this.id,\n            figure: {\n                type: 'circle',\n                x: this.startX,\n                y: this.startY,\n                r: this.radius,\n                color: this.ctx.fillStyle,\n                stroke: this.ctx.strokeStyle,\n                lineWidth: this.ctx.lineWidth,\n            }\n        }))\n    }\n\n    mouseDownHandler(e) {\n        this.mouseDown = true;\n        this.startX = e.pageX - e.target.offsetLeft; // Вираховує позицію миші по осі X, віднімаючи від неї відстань від краю сторінки до початку канваса.\n        this.startY = e.pageY - e.target.offsetTop; // Аналогічно для осі Y — обчислює вертикальну позицію миші на канвасі.\n        this.saved = this.canvas.toDataURL(); // Зберігаємо зображення з канвасу\n    }\n\n    mouseMoveHandler(e) {\n        if (this.mouseDown) {\n            let currentX = e.pageX - e.target.offsetLeft;\n            this.radius = currentX - this.startX;\n            this.draw(this.startX, this.startY, this.radius);\n        }\n    }\n\n    draw(x, y, r) {\n        const img = new Image();\n        img.src = this.saved;\n        // Спрацьовує тоді коли зображення встановлено, асинхронна функція\n        img.onload = () => {\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height); // Очищаємо канвас від тих фігур які ми намалювали, щоб бачити лише поточний обєкт\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height); // Через те що ми очищаємо весь канвас, нам потрібно повернути старі малюнки,тому ми зберіг img\n            this.ctx.beginPath(); // говорить про те що ми почали малювати нову лінію\n            this.ctx.arc(x, y, r, 0, 2 * Math.PI);\n            this.ctx.fill();\n            this.ctx.stroke();\n        }\n    }\n\n    static staticDraw(ctx, x, y, r, color, stroke, lineWidth) {\n        ctx.strokeStyle = stroke;\n        ctx.fillStyle = color;\n        ctx.lineWidth = lineWidth;\n        ctx.arc(x, y, r, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.stroke();\n    }\n}\n\n// у цьому класі ми робимо майже те саме, що і в класі прямокутник, тільки малюємо коло\n// не обчислюємо ширину і висоту, а обчислюємо радіус, як ширину між початковою та поточкою точкою, а коло беремо від 0 до 2Pi\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}